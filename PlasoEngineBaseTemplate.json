{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template defines the Bucket, IAM Roles, Lambda and Infrastructure for the PlasoHopper pipeline.",
  "Parameters": {
    "BucketName": {
      "Type" : "String",
      "Default" : "ImageDropBucket",
      "Description" : "Name of the bucket to create/use for the drop."
    },
    "BucketDropPath" : {
      "Type" : "String",
      "Default" : "/drop",
      "Description" : "The bucket path that is monitored for image files."
    },
    "BucketOutputPath" : {
      "Type" : "String",
      "Default" : "/plasoout",
      "Description" : "The bucket path that .plaso files will be output to during."
    },
    "EngineInstanceType" : {
      "Type" : "String",
      "Description" : "The instance type to use for the plaso timelining engine. Note this should be Compute Optimized!",
      "Default" : "c4.4xlarge",
      "AllowedValues" : ["c4.xlarge","c4.2xlarge","c4.4xlarge","c4.8xlarge"]
    },
    "PlasoEngineSG" : {
      "Type" : "AWS::EC2::SecurityGroup::Id",
      "Description" : "The security group to be applied to the Plaso Engine and psort EC2 instances.",
      "AllowedPattern" : "sg-[a-f0-9]"
    },
    "ResourceTags": {
      "Type": "String",
      "Default": "",
      "Description": "Tags to be applied to the created resources. Must be in CFResourceTag JSON format. ref: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html"
    }
  },
  "Mappings": {},
  "Conditions": {},
  "Resources": {
    "LambdaCFRole": {
       "Type": "AWS::IAM::Role",
       "RoleName" : "LambdaCFRole",
       "Properties": {
          "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Action": "sts:AssumeRole",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "lambda.amazonaws.com"
                        }
                    }
                ]
            },
          "Path": "",
          "Policies": [{
            "PolicyName" : "CloudFormationCreate",
            "PolicyDocument" : {
              "Statement" : [{
                "Effect" : "Allow",
                "Action" : [
                  "cloudformation:CreateStack",
                  "cloudformation:UpdateStack",
                  "cloudformation:DeleteStack",
                  "s3:ListBucket",
                ]
                }]
            }
          }]
       }
    },
    "PES3WriteLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": "TO BE CODE",
        "Description": "This lambda is invoked by the PUT of the .txt to the PlasoEngine S3 bucket to build/deploy the PlasoEngine EC2 Engines and begin them processing the images.",
        "Handler": "Lambda Handler Function Name",
        "Role": { "Ref": "LambdaCFRole" },
        "Runtime": "python2.7"
      }
    },
    "PlasoOutLambda" :{
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "Code" : "TO BE CODE",
        "Description" : "This lambda is invoked by the PUT of the .plaso file to the PlasoEngine S3 bucket to build/deploy the TimeSketch infrastructure to analyze the timeline.",
        "Handler" : "Lambda Handler Function Name",
        "Role" : { "Ref": "LambdaCFRole" },
        "Runtime" : "python2.7"
      }
    },
    "ImageDropBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": { "Ref": "BucketName" },
        "NotificationConfiguration": [
          {
            "LambdaConfigurations": [
              {
                "Event": "s3:ObjectCreated:Put",
                "Function": [{"Ref":"PES3WriteLambda"}],
                "Filter": [{"S3Key":{"Rules":[{"Name":"suffix","Value":".txt"}]}}]
              }
            ]
          }
        ],
        "Tags": [{"Ref":"ResourceTags"}]
      }
    },
    "ImageDropBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ImageDropBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": ["",["arn:aws:s3:::",{"Ref":"ImageDropBucket"},"/*"]]
              },
              "Principal": "*"
            },
            {
              "Action": [
                "s3:GetObject"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": ["",["arn:aws:s3:::",{"Ref":"ImageDropBucket"},"/*"]]
              },
              "Principal": "*"
            }
          ]
        }
      }
    }
  },
  "Outputs": {}
}
